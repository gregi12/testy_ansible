---
# tasks file for win_update
#- name: Install all security, critical, and rollup updates without a scheduled task
 # ansible.windows.win_updates:
  #  category_names:
   #   - SecurityUpdates
    #  - CriticalUpdates
    #reboot: true
  #become: true
  #become_method: runas
  #become_user: SYSTEM
  #ignore_errors: yes
  #vars:
    # This can be set in a few ways, see the ssh connection plugin for more
    # information. ControlMaster should be disabled to ensure the new timeout
    # value is applied for this connection instead of through the cached
    # connection.
  #  ansible_ssh_args: -o ControlMaster=no -o ServerAliveInterval=30
---
# tasks file for win_update

- name: Download all security, critical, and rollup updates
  ansible.windows.win_updates:
    category_names:
      - SecurityUpdates
      - CriticalUpdates
    state: downloaded
    reboot: false
  become: true
  become_method: runas
  become_user: SYSTEM
  register: download_updates_result
  ignore_errors: yes  # Ignore errors to continue the playbook
  vars:
    ansible_ssh_args: -o ControlMaster=no -o ServerAliveInterval=30

- name: Debug download results
  debug:
    var: download_updates_result

- name: Install updates that were successfully downloaded
  ansible.windows.win_updates:
    category_names:
      - SecurityUpdates
      - CriticalUpdates
    state: installed
    reboot: true
  become: true
  become_method: runas
  become_user: SYSTEM
  when: download_updates_result.updates | length > 0  # Only run if there are downloaded updates
  vars:
    ansible_ssh_args: -o ControlMaster=no -o ServerAliveInterval=30
